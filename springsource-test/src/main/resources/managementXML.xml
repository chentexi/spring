<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--扫描类-->
	<context:component-scan base-package="com.trent"/>

	<!--引入外部配置文件-->
	<context:property-placeholder location="classpath:dataSource.properties"/>

	<!--配置数据源-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${dataSource.driverName}"></property>
		<property name="url" value="${dataSource.url}"></property>
		<property name="username" value="${dataSource.userName}"></property>
		<property name="password" value="${dataSource.password}"></property>
	</bean>

	<!--配置jdbcTemplate-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!--1.配置事务管理器-->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!--2.声明业务方法的事务属性（隔离级别，传播行为，超时）
        id:给业务方法配置事务段代码起个名称，唯一值
        transaction-manager:事务管理器的id
    -->
	<tx:advice id="serviceAdvice" transaction-manager="dataSourceTransactionManager">
		<!--给具体的业务方法增加事务的说明-->
		<tx:attributes>
			<!--
			   给具体的业务方法，说明他需要的事务属性
			   name: 业务方法名称。
					 配置name的值： 1. 业务方法的名称； 2. 带有部分通配符(*)的方法名称； 3 使用*
			   propagation:指定传播行为的值
			   isolation：隔离级别
			   read-only：是否只读，默认是false
			   timeout：超时时间
			   rollback-for：指定回滚的异常类列表，使用的异常全限定名称
			-->
			<tx:method name="buy" propagation="REQUIRED" isolation="DEFAULT"
					   read-only="false" timeout="20"
					   rollback-for="java.lang.NullPointerException,com.bjpowernode.excetion.NotEnougthException"/>


			<!--在业务方法有命名规则后， 可以对一些方法使用事务-->
			<tx:method name="add*" propagation="REQUIRES_NEW"
					   rollback-for="java.lang.Exception" />
			<tx:method name="modify*"
					   propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="remove*"
					   propagation="REQUIRED" rollback-for="java.lang.Exception" />

			<!--以上方法以外的 * :querySale, findSale, searchSale -->
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!--声明切入点表达式： 表示那些包中的类，类中的方法参与事务-->
	<aop:config>
		<!--声明切入点表达式
			 expression：切入点表达式， 表示那些类和类中的方法要参与事务
			 id：切入点表达式的名称，唯一值

			 expression怎么写？
	   -->
		<aop:pointcut id="servicePointcut" expression="execution(* *..service..*.*(..))" />
		<!--关联切入点表达式和事务通知-->
		<aop:advisor advice-ref="serviceAdvice" pointcut-ref="servicePointcut" />
	</aop:config>
</beans>